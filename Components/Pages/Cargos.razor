@page "/cargos"
@inject ICargoService CargoService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Cargos</PageTitle>
<h1>Cargos</h1>

@if (cargos.Count == 0)
{
    <p><em>No cargos found.</em></p>
}
else
{
    <table class="table">
        <thead>
        <th>Cargo Code</th>
        <th>Description</th>
        <th>Weight (kg)</th>
        <th>Location</th>
        <th>Edit</th>
        <th>Delete</th>
        </thead>
        <tbody>
        @foreach (var cargo in cargos)
        {
            <tr>
                <td>@cargo.CargoCode</td>
                <td>@cargo.Description</td>
                <td>@cargo.Weight</td>
                <td>@(cargo.Status == CargoStatus.InWarehouse ? cargo.Warehouse?.WarehouseCode : cargo.Airplane?.AirplaneCode)</td>

                <td>
                    <button class="btn btn-primary" @onclick="@(() => EditCargo(cargo.CargoId))">Edit</button>
                </td>
                <td>
                    <button class="btn btn-danger" @onclick="@(() => ShowDeleteConfirmation(cargo.CargoId))">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="AddCargo">Add a New Cargo</button>
    
}

<!-- Modal -->
<div class="modal fade show" tabindex="-1" role="dialog" style="display: @(isDeleteModalVisible ? "block" : "none");">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" @onclick="HideDeleteConfirmation" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this cargo?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" @onclick="HideDeleteConfirmation">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="ConfirmDeleteCargo">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    List<Cargo> cargos = new List<Cargo>();
    bool isDeleteModalVisible = false;
    int cargoIdToDelete = 0;

    protected override async Task OnInitializedAsync()
    {
        cargos = await CargoService.GetAllCargosAsync();
    }

    void EditCargo(int id)
    {
        NavigationManager.NavigateTo($"/edit-cargo/{id}");
    }

    void AddCargo()
    {
        NavigationManager.NavigateTo("/edit-cargo");
    }

    void ShowDeleteConfirmation(int id)
    {
        isDeleteModalVisible = true;
        cargoIdToDelete = id;
    }

    void HideDeleteConfirmation()
    {
        isDeleteModalVisible = false;
        cargoIdToDelete = 0;
    }

    async Task ConfirmDeleteCargo()
    {
        if (cargoIdToDelete != 0)
        {
            await CargoService.DeleteCargoAsync(cargoIdToDelete);
            cargos = await CargoService.GetAllCargosAsync();
        }
        HideDeleteConfirmation();
    }
}
